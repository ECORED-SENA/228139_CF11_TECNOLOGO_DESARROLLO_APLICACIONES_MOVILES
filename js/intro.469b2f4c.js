(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["intro"],{"0fa9":function(e,a,o){e.exports=o.p+"img/banner-intro.416038a3.svg"},5167:function(e,a,o){"use strict";o.r(a);var t=function(){var e=this,a=e.$createElement,o=e._self._c||a;return o("div",{staticClass:"curso-main-container introduccion"},[o("BannerInterno"),e._m(0)],1)},i=[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"container tarjeta tarjeta--blanca p-4 p-md-5 mb-5"},[t("div",{staticClass:"titulo-principal color-acento-contenido"},[t("div",{staticClass:"titulo-principal__numero"},[t("span",[t("i",{staticClass:"fas fa-info"})])]),t("h1",[e._v("Introducción")])]),t("figure",{staticClass:"mb-5"},[t("img",{attrs:{src:o("0fa9"),alt:"Redes"}})]),t("p",{staticClass:"mb-5"},[e._v("Para la construcción de "),t("i",[e._v("software")]),e._v(" se hace evidente la importancia de la utilización de modelos ya que representan el aspecto y la dirección de una necesidad. Esa “necesidad” puede estar en un estado de desarrollo o en un estado de planeación. Los diseñadores del modelo deben realizar un levante de los requerimientos del producto y dichos requerimientos pueden incluir áreas tales como funcionalidad, "),t("i",[e._v("performance")]),e._v(" y confiabilidad. El modelo se divide en un número de vistas, cada una de las cuales describe un aspecto específico del producto o sistema en construcción. Un modelo permite documentar la estructura y conducta de un sistema antes de que sea codificado. En el siguiente video se expone la importancia de la programación orientada a objetos (POO) para modelar soluciones de "),t("i",[e._v("software")]),e._v(".")]),t("div",{staticClass:"row justify-content-center align-items-center mb-5"},[t("div",{staticClass:"col-lg-12",attrs:{"data-aos":"fade-left"}},[t("figure",[t("div",{staticClass:"video"},[t("iframe",{attrs:{width:"560",height:"315",src:"https://www.youtube.com/embed/W6Wt7VK0bFI?si=JBfBdHyfRZI5A9fE",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})])]),t("figcaption",[e._v("Video. Diseño del modelo conceptual bajo el paradigma orientado a objetos")])])]),t("div",{staticClass:"cajon color-acento-contenido p-4"},[t("p",{staticClass:"mb-0"},[e._v("Este componente formativo también dará un recorrido a las características del lenguaje de programación orientada a objetos, las implementaciones de clases y objetos, y en su interior se reconocerán los atributos, métodos de las clases, los constructores y destructores, los métodos de acceso y modificación, junto con la sobrecarga de métodos. Esto permitirá conocer con la comunicación entre clases desde su implementación de asociaciones, composición / agregación y la implementación de herencia. ")])])])}],s={name:"Introduccion",data:function(){return{}}},n=s,c=o("2877"),r=Object(c["a"])(n,t,i,!1,null,null,null);a["default"]=r.exports}}]);
//# sourceMappingURL=intro.469b2f4c.js.map